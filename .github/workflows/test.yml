name: Boogie CI

on:
  workflow_dispatch:
  push:
    branches: [ master, cvc5 ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master, cvc5 ]

env:
  SOLUTION: Source/Boogie.sln
  Z3URL: https://github.com/Z3Prover/z3/releases/download/z3-4.8.8/z3-4.8.8-x64-ubuntu-16.04.zip
  CVC5URL: https://github.com/cvc5/cvc5/releases/latest/download/cvc5-Linux

jobs:
  job0:
    name: Boogie CI
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        configuration: [Debug, Release]
        lit_param: ["batch_mode=True", "batch_mode=False"]
    steps:
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Checkout Boogie
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install tools, build Boogie, test Boogie
        run: |
          # Download a Z3 release
          wget ${Z3URL}
          unzip z3*.zip
          export PATH="$(find $PWD/z3* -name bin -type d):$PATH"
          # Download a CVC5 release
          mkdir -p bin
          (cd bin && wget ${CVC5URL} && mv cvc5-Linux cvc5 && chmod +x cvc5)
          export PATH="$PWD/bin:$PATH"
          # Install python tools
          sudo pip3 install setuptools
          sudo pip3 install lit OutputCheck pyyaml psutil
          # Change directory to Boogie root folder
          cd $GITHUB_WORKSPACE
          # Restore dotnet tools
          dotnet tool restore
          # Check that generated scanner and parser are consistent with attributed grammar
          dotnet tool run coco Source/Core/BoogiePL.atg -namespace Microsoft.Boogie -frames Source/Core/
          diff --strip-trailing-cr Source/Core/Parser.cs Source/Core/Parser.cs.old
          diff --strip-trailing-cr Source/Core/Scanner.cs Source/Core/Scanner.cs.old
          # Build Boogie
          dotnet build -warnaserror -c ${{ matrix.configuration }} ${SOLUTION}
          # Create packages
          dotnet pack --no-build -c ${{ matrix.configuration }} ${SOLUTION}
          # Run unit tests
          dotnet test --no-build -c ${{ matrix.configuration }} ${SOLUTION}
          # Run lit test suite with Z3
          cd Test
          echo "running Z3" 
          echo $PWD
          lit -v . --timeout=120 --param boogie_params='/proverOpt:SOLVER=Z3'
          # Run lit test suite with CVC5
          echo "==================================================="
          echo "running CVC5"
          echo $PWD
          lit -v . --timeout=120 --param boogie_params='/proverOpt:SOLVER=CVC5'

